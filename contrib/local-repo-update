#!/bin/bash
#
# This script updates my local debian repository
#

set -e

export LC_ALL=C
export LANG=C

GPG_OPTS="-u 76FB442E --digest-algo SHA512 --batch --no-tty"
APT_REPO_PREFIX="$HOME/my-local-repo"
SUPPORTED_DISTS="jessie stretch buster sid trusty xenial bionic eoan"

__warn() {
	if [ ! -z "$1" ]; then
		echo "$1" >&2
	fi
}

__die() {
	__warn "$1"
	exit 1
}

__debug() {
	if [ $# -lt 2 ]; then
		if [ ! -z "$__DEBUG" ]; then
			__warn "$1"
		fi
	else
		if [ $1 -ge $__DEBUG ]; then
			__warn "$2"
		fi
	fi
}

parseCmdline() {
	while [ $# -gt 0 ]
	do
		PARAM="$1"
		case "$PARAM" in
			--upload-only)
				__UPLOAD_ONLY="yes"
				shift
				;;
			--debug)
				if [ $# -gt 1 ]; then
					__DEBUG="$2"
					shift
				else
					__DEBUG=1
				fi
				;;
			*)
				__die "Incorrect parameter supplied: $PARAM"
				;;
		esac
	done
}

fixPermissions() {
	find ${APT_REPO_PREFIX} -type f -print0 | xargs -r0 chmod 644
	find ${APT_REPO_PREFIX} -type d -print0 | xargs -r0 chmod 755
}

uploadRepository() {
	fixPermissions

	# Check if script run in interactive mode
	if [ -t 0 -o -p /dev/stdin ]; then
		rsync -aPz --delete --delete-after ${APT_REPO_PREFIX}/pool repository:/var/vhosts/tataranovich.com/debian/ && \
		rsync -aPz --delete --delete-after --exclude='*.db' --delete-excluded ${APT_REPO_PREFIX}/ repository:/var/vhosts/tataranovich.com/debian/
	else
		rsync -az --partial --delete-after ${APT_REPO_PREFIX}/pool repository:/var/vhosts/tataranovich.com/debian/ && \
		rsync -az --delete --delete-after --exclude='*.db' --delete-excluded ${APT_REPO_PREFIX}/ repository:/var/vhosts/tataranovich.com/debian/
	fi
}

sign_release_file() {
	local DISTNAME

	if [ -z "$1" ]; then
		return
	fi

	DISTNAME="$1"

	if [ -d ${APT_REPO_PREFIX}/dists/${DISTNAME} ]; then
		echo "Processing ${DISTNAME} release"
		cd ${APT_REPO_PREFIX}/dists/${DISTNAME}
		apt-ftparchive -c ${HOME}/.apt-ftparchive-${DISTNAME}.conf release . > Release
		rm -f Release.gpg
		gpg $GPG_OPTS --output Release.gpg -ba Release
	fi
}

parseCmdline $@

if [ -r ~/bin/prepare-environment.sh ]; then
	. ~/bin/prepare-environment.sh
fi

if [ "$__UPLOAD_ONLY" == "yes" ]; then
	__debug "Only syncing local and remote repository"
	uploadRepository
	exit $?
fi

if [ -x ~/bin/cleanup-nightly-builds.sh ]; then
	~/bin/cleanup-nightly-builds.sh
fi

# Check if apt-ftparchive available
if [ ! -x `which apt-ftparchive` ]; then
	echo "Seems that apt-ftparchive binary not installed"
	exit 1
fi

apt-ftparchive generate "$HOME/.apt-ftparchive-common.conf" 2>&1 | egrep -v 'has no (binary|source) override entry'

for DIST in $SUPPORTED_DISTS
do
	sign_release_file $DIST
done

uploadRepository
